
services:
  postgres:
    image: postgres:15
    container_name: postgres
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-net

  nats:
    image: nats:2.9.8-alpine3.16
    container_name: nats
    command: -js
    ports:
      - "4222:4222"
      - "8222:8222"
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 4222 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-net

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - app-net

  publisher:
    image: andriiuni/events
    depends_on:
      gateway:
        condition: service_healthy
    environment:
      EVENT_ENDPOINT: http://gateway:3000/events
    networks:
      - app-net

  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    env_file:
      - ./.env
    ports:
      - 3000:3000
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/health" ]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      - nats
    networks:
      - app-net

  fb-collector:
    build:
      context: .
      dockerfile: ./apps/fb-collector/Dockerfile
      target: development
    env_file:
      - ./.env
    ports:
      - 3004:3000
    networks:
      - app-net
    depends_on:
      gateway:
        condition: service_healthy

  ttk-collector:
    build:
      context: .
      dockerfile: ./apps/ttk-collector/Dockerfile
      target: development
    env_file:
      - ./.env
    ports:
      - 3005:3000
    networks:
      - app-net
    depends_on:
      gateway:
        condition: service_healthy

  reporter:
    build:
      context: .
      dockerfile: apps/reporter/Dockerfile
      target: ${DOCKER_TARGET:-development}
    env_file:
      - .env
    depends_on:
      - nats
    networks:
      - app-net
    ports:
      - 3006:3000


volumes:
  postgres-data:
  grafana-data:

networks:
  app-net:
    driver: bridge